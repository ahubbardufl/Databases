{"version":3,"file":"index.js","sources":["../src/utils/index.js","../src/components/Canvas/Particle.js","../src/components/Canvas/Particles.js","../src/components/Aux/Aux.js","../src/components/Canvas/Canvas.js"],"sourcesContent":["/**\n * @function importAll\n * @param {any} r - Require Context.\n * @returns {string} - File paths.\n */\nexport const importAll = (r) => {\n    return r.keys().map(r);\n};\n\n/**\n * @function importAllImages\n * @param {string} directory - The complete directory/folder path.\n * @param {regex} extensions - file extension filter.\n * @returns {string}\n */\nexport const importAllImages = (directory, extensions = /\\.(jpg|jpeg|png|svg)$/) => {\n    return importAll(require.context(directory, false, extensions));\n};\n\n/**\n * @function hasProperty\n * @param {string} property - The property to check for in the given object.\n * @param {object} object - The object in which to check for above given property.\n * @returns {any}\n */\nexport const hasProperty = (property, object) => {\n    try {\n        return (typeof object === 'object') && !Array.isArray(object) && object.hasOwnProperty(property);\n    } catch (e) {\n        console.warn(e.message, e);\n        return false;\n    }\n};\n\n/**\n * @function isObject\n * @param {object} object - Object to check if is an object.\n * @returns {boolean}\n */\nexport const isObject = (object) => {\n    try {\n        return (typeof object === 'object') && !Array.isArray(object);\n    } catch (e) {\n        console.warn(e.message, e);\n        return false;\n    }\n};\n","import { hasProperty } from '../../utils';\n\nexport default class Particle {\n    constructor(canvas, options) {\n        const {\n            shape,\n            color,\n            image,\n            size,\n            precision,\n            x,\n            y,\n            debugOptions\n        } = options;\n\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.shape = shape || 'circle';\n        this.color = color || '#F20000';\n        this.precision = precision || 2;\n        this.size = this.parseSize(size) || this.parseSize(+Math.random().toFixed(this.precision));\n        this.x = x || +Math.random().toFixed(this.precision);\n        this.y = y || +Math.random().toFixed(this.precision);\n        this.imageOptions = image || undefined;\n        this.image = new Image();\n        this.debug = debugOptions || { enabled: false };\n\n        // Errors\n        if (image !== undefined && !hasProperty('src', image)) {\n            throw new Error(\"Image object must have 'src' property.\");\n        }\n\n        if (!(hasProperty('width', this.size) && hasProperty('height', this.size)) && !hasProperty('radius', this.size)) {\n            throw new Error(\"Size object must have either 'width' AND 'height' OR 'radius' property.\");\n        }\n\n        if (this.debug.enabled) {\n            if (hasProperty('attachAllParticles', this.debug) && this.debug.attachAllParticles) {\n                window.Particles = window.Particles || [];\n                window.Particles.push(this);\n            }\n            window.Particle = this;\n        }\n    }\n\n    parseSize = (size) => {\n        let trueSize = size;\n        if (typeof size !== 'object') {\n            trueSize = this.shape === 'circle' ? { radius: size } : { width: size, height: size };\n        }\n        return trueSize;\n    }\n\n    draw = (x = this.x, y = this.y, size = this.size) => {\n        const posX = this.x = x;\n        const posY = this.y = y;\n        const rSize = this.size = size;\n\n        if (this.imageOptions) {\n            this.image.src = this.imageOptions.src;\n            this.ctx.drawImage(this.image, this.x, this.y, this.getSize('x'), this.getSize('y'));\n        } else {\n            switch (this.shape) {\n                case 'rectangle':\n                case 'rect':\n                case 'square':\n                    let { width, height } = rSize;\n                    if (this.shape === 'square') {\n                        height = width;\n                    }\n                    this.drawRectangle(posX, posY, width, height);\n                    break;\n\n                case 'circle':\n                default:\n                    const { radius } = rSize;\n                    this.drawCircle(posX, posY, radius);\n                    break;\n            }\n        }\n    }\n\n    drawCircle = (x, y, radius) => {\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, radius, 0, Math.PI * 2);\n        this.ctx.fillStyle = this.color;\n        this.ctx.fill();\n    }\n\n    drawRectangle = (x, y, width, height) => {\n        this.ctx.fillStyle = this.color;\n        this.ctx.fillRect(x, y, width, height);\n    }\n\n    drawImage = (...args) => {\n        console.log(args);\n        this.ctx.drawImage.apply(this.ctx, args);\n    }\n\n    getSize = (axis) => {\n        if (axis === 'x') {\n            return this.size.width || this.size.radius;\n        } else if (axis === 'y') {\n            return this.size.height || this.size.radius;\n        }\n    }\n}\n","import Particle from './Particle';\nimport { hasProperty } from '../../utils';\n\nexport default class Particles {\n    /**\n     * @param canvas The html canvas element\n     *\n     * Example Particle Options:\n     * @param options = {\n     *   maxParticles: 0,\n     *   colors: ['red', 'green', '#ff1000'],\n     *   shapes: ['square', 'circle', 'rectangle', { type: 'image', src: '/path/to/image' }],\n     *   size: 0.00,\n     *   minSize: 0.00,\n     *   maxSize: 0.00,\n     *   velocity: 0.00,\n     *   minSpeed: 0.00,\n     *   maxSpeed: 0.00,\n     *   alpha: 0.7\n     * }\n     *\n     */\n    constructor(canvas, options) {\n        const {\n            maxParticles,\n            backgroundColor,\n            colors,\n            shapes,\n            size,\n            minSize,\n            maxSize,\n            minSpeed,\n            maxSpeed,\n            alpha,\n            frameRate,\n            duration,\n            precision,\n            debugOptions\n        } = options;\n\n        this.particles = [];\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.precision = precision || 2;\n        this.canvas.style.backgroundColor = backgroundColor || '#f1f1f1';\n\n        this.maxParticles = maxParticles === null || maxParticles === undefined ? 50 : maxParticles;\n        this.colors = Array.isArray(colors) ? colors : [colors] || ['red', 'green', 'yellow'];\n        this.shapes = Array.isArray(shapes) ? shapes : [shapes] || ['circle', 'square', 'rectangle'];\n        this.size = size;\n        this.maxSize = +parseFloat(maxSize).toFixed(this.precision) || 20;\n        this.minSize = +parseFloat(minSize).toFixed(this.precision) || 10;\n        this.maxSpeed = +parseFloat(maxSpeed).toFixed(this.precision) || 0.09;\n        this.minSpeed = +parseFloat(minSpeed).toFixed(this.precision) || 0.05;\n        this.alpha = alpha || 0.5;\n        this.frameRate = frameRate || 0;\n        this.frameInterval = 1000 / this.frameRate;\n        this.duration = duration || 0;\n        this.debugOptions = debugOptions || { showFrameRate: false };\n        this.debug = {\n            frames: 0,\n            start: null,\n            frameRate: null\n        };\n        this.particleOptions = options;\n        this.paused = false;\n        this.createParticles();\n    }\n\n    createParticles = () => {\n        let _particles = [...Array(this.maxParticles)];\n        if (this.maxParticles === 0 && typeof this.shapes[0] === 'object') {\n            _particles = this.shapes;\n        }\n\n        /**\n         * @param {string|null|object} item - Shape object or string or null.\n         */\n        for (const [i, item] of _particles.entries()) {\n            const particleOptions = Object.assign(this.particleOptions, this.buildParticleOptions(item));\n            const particle = new Particle(this.canvas, particleOptions);\n            this.attachParticleAnimationConfig(particle, item);\n            this.positionCorrection(particle, i);\n\n            this.particles = !Array.isArray(this.particles) ? [] : this.particles;\n            this.particles.push(particle);\n        }\n    }\n\n    buildParticleOptions = (item = null) => {\n        let particleOptions = {};\n        if (item !== null && typeof item === 'object') {\n            particleOptions = Object.assign({}, item);\n            if (hasProperty('type', item) && item.type !== 'image') {\n                particleOptions.shape = item.type;\n            } else if (hasProperty('type', item) && item.type === 'image') {\n                particleOptions.shape = 'square';\n\n                if (hasProperty('src', item)) {\n                    particleOptions.image = {\n                        src: item.src\n                    };\n                } else {\n                    throw new Error('Shape of type `image` must have property `src`.');\n                }\n            } else {\n                particleOptions.shape = typeof item === 'string' ? item : this.getRandomShape();\n            }\n        }\n\n        particleOptions.shape = particleOptions.shape || this.shape || this.getRandomShape();\n        particleOptions.size = particleOptions.size || this.size || this.genRandomSize(particleOptions.shape);\n\n        if (typeof particleOptions.size !== 'object') {\n            particleOptions.size = this.parseSize(particleOptions.size, particleOptions);\n        }\n\n        particleOptions.color = particleOptions.color || this.getRandomColor();\n        particleOptions.x = particleOptions.x || this.getRandomCoordinate('x', undefined, undefined, undefined, particleOptions);\n        particleOptions.y = particleOptions.y || this.getRandomCoordinate('y', undefined, undefined, undefined, particleOptions);\n        return particleOptions;\n    }\n\n    attachParticleAnimationConfig = (particle, item) => {\n        if (hasProperty('animate', particle)) {\n            return particle;\n        }\n\n        particle.animate = {};\n        particle.animate.bounds = {};\n        if (particle.shape === 'circle') {\n            particle.animate.bounds.minX = particle.getSize('x');\n            particle.animate.bounds.minY = particle.getSize('y');\n        } else {\n            particle.animate.bounds.minX = particle.animate.bounds.minY = 0;\n        }\n\n        particle.animate.bounds.maxX = this.canvas.width - particle.getSize('x');\n        particle.animate.bounds.maxY = this.canvas.height - particle.getSize('y');\n        particle.animate.xSpace = particle.x + particle.animate.bounds.minX;\n        particle.animate.ySpace = particle.y + particle.animate.bounds.minY;\n\n        particle.animate.xSpace = this.getDistance(particle, 'x');\n        particle.animate.ySpace = this.getDistance(particle, 'y');\n\n        if (hasProperty('from', item)) {\n            particle.animate.to = {x: particle.x, y: particle.y, size: particle.size, duration: item.to.duration};\n            particle.x = item.from.x;\n            particle.y = item.from.y;\n            particle.size = hasProperty('size', item.from) ? item.from.size : particle.size;\n        }\n        if (hasProperty('to', item)) {\n            particle.animate.to = item.to;\n        }\n\n        if (hasProperty('to', particle.animate)) {\n            let duration = hasProperty('duration', particle.animate.to) ? particle.animate.to.duration : this.duration;\n            particle.animate.speed.x = (particle.animate.to.x - particle.x) / duration;\n            particle.animate.speed.y = (particle.animate.to.y - particle.y) / duration;\n            particle.animate.direction = {\n                x: (particle.animate.to.x - particle.x) > 0 ? -1 : 1,\n                y: (particle.animate.to.y - particle.y) > 0 ? -1 : 1\n            };\n        } else {\n            const direction = [1, -1];\n            particle.animate.speed = {};\n            particle.animate.speed.x = particle.animate.speed.y = this.getRandomFloat(this.minSpeed, this.maxSpeed);\n            particle.animate.direction = {\n                x: direction[this.getRandomInt(0, 1)],\n                y: direction[this.getRandomInt(0, 1)]\n            };\n        }\n    }\n\n    getDistance = (particle, axis) => {\n        return particle[axis] + particle.getSize(axis);\n    }\n\n    positionCorrection = (particle, i) => {\n        const padding = 5;\n        let _particles = this.particles.splice(i);\n\n        let _newParticles = _particles.map((_particle) => {\n            if (_particle.x < particle.animate.xSpace || _particle.animate.xSpace > particle.x) {\n                const totalXSpace = particle.animate.xSpace + padding + _particle.animate.xSpace;\n                if (totalXSpace < this.canvas.width) {\n                    _particle.x = particle.animate.xSpace + padding;\n                } else {\n                    _particle.x = particle.x - padding;\n                }\n            }\n\n            if (_particle.y < particle.animate.ySpace || _particle.animate.ySpace > particle.y) {\n                const totalYSpace = particle.animate.ySpace + padding + _particle.animate.ySpace;\n                if (totalYSpace < this.canvas.height) {\n                    _particle.y = particle.animate.ySpace + padding;\n                } else {\n                    _particle.y = particle.y - padding;\n                }\n            }\n\n            return _particle;\n        });\n\n        this.particles.concat(_newParticles);\n    }\n\n    animate = () => {\n        this.interval = window.requestAnimationFrame(this.animate);\n        this.draw();\n\n        // Debug\n        if (this.debugOptions.showFrameRate) {\n            this.debug.start = this.debug.start || performance.now();\n            let now = performance.now();\n            this.debug.frames++;\n            const delta = now - this.debug.start;\n            if (delta > 1000) {\n                this.debug.frameRate = this.debug.frames;\n                this.debug.frames = 0;\n                this.debug.start = performance.now();\n            }\n        }\n    }\n\n    draw = () => {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.globalAlpha = this.alpha;\n\n        this.particles.map((particle) => {\n            if (hasProperty('to', particle.animate)) {\n                this.incrementTo(particle);\n            } else {\n                this.incrementor(particle);\n            }\n\n            particle.draw();\n            this.ctx.restore();\n\n            return particle;\n        });\n    }\n\n    clear = () => {\n        window.cancelAnimationFrame(this.interval);\n    }\n\n    incrementTo = (particle) => {\n        // TODO: add logic\n    }\n\n    incrementor = (particle) => {\n        const directions = ['x', 'y', 'xy'];\n        let direction = directions[this.getRandomInt(0, directions.length - 1)];\n\n        switch (direction) {\n            case 'x':\n                this.safeIncrement(particle, 'x');\n                break;\n\n            case 'y':\n                this.safeIncrement(particle, 'y');\n                break;\n\n            case 'xy':\n                this.safeIncrement(particle, 'x');\n                this.safeIncrement(particle, 'y');\n                break;\n        }\n    }\n\n    safeIncrement = (particle, axis) => {\n        let projection = particle[axis] + (particle.animate.direction[axis] * particle.animate.speed[axis]);\n\n        if (projection > particle.animate.bounds['max' + axis.toUpperCase()] || projection < particle.animate.bounds['min' + axis.toUpperCase()]) {\n            particle.animate.direction[axis] = -1 * particle.animate.direction[axis];\n            projection = particle[axis] + (particle.animate.direction[axis] * particle.animate.speed[axis]);\n        }\n\n        particle[axis] = projection;\n    }\n\n    getRandomShape = () => {\n        return this.shapes[this.getRandomInt(0, this.shapes.length - 1)];\n    }\n\n    getRandomColor = () => {\n        return this.colors[this.getRandomInt(0, this.colors.length - 1)];\n    }\n\n    getRandomCoordinate = (axis, from, to, fixed, ctx) => {\n        from = from || 0;\n        fixed = fixed || 2;\n\n        if (axis === 'x') {\n            // canvas width - size to keep particles within canvas boundary\n            to = to || this.canvas.width - this.getSize('x', ctx);\n        } else if (axis === 'y') {\n            // canvas width - size to keep particles within canvas boundary\n            to = to || this.canvas.height - this.getSize('y', ctx);\n        } else {\n            throw new Error('Illegal Axis!');\n        }\n\n        let x = this.getRandomInt(from, to);\n        return x;\n    }\n\n    genRandomSize = (type = 'circle') => {\n        let size;\n        if (type === 'circle') {\n            size = { radius: this.getRandomInt(this.minSize, this.maxSize) };\n        } else {\n            size = {\n                width: this.getRandomInt(this.minSize, this.maxSize),\n                height: this.getRandomInt(this.minSize, this.maxSize)\n            };\n            if (type === 'square') {\n                size.width = size.height;\n            }\n        }\n\n        return size;\n    }\n\n    getRandomFloat = (min, max) => {\n        return Math.random() * (max - min) + min;\n    }\n\n    getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    getSize = (axis, particle) => {\n        const object = typeof particle === 'object' ? particle : this;\n        let dimension = axis === 'x' ? 'width' : 'height';\n        if (particle.shape === 'circle') {\n            dimension = 'radius';\n        }\n        return parseInt(object.size[dimension]);\n    }\n\n    parseSize = (size, ctx) => {\n        let trueSize = size;\n        const obj = ctx || this;\n        if (typeof size !== 'object') {\n            trueSize = obj.shape === 'circle' ? { radius: size } : { width: size, height: size };\n        }\n        return trueSize;\n    }\n}\n","const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport Particles from './Particles';\nimport PropTypes from 'prop-types';\nimport Aux from '../Aux/Aux';\n\nconst sizePropType = PropTypes.oneOf([\n    {width: PropTypes.number.isRequired, height: PropTypes.number},\n    {radius: PropTypes.number.isRequired},\n    PropTypes.number\n]);\n\nconst shapePropType = PropTypes.shape({\n    type: PropTypes.oneOf(['image', 'rectangle', 'square', 'circle']).isRequired,\n    src: PropTypes.string,\n    size: sizePropType,\n    color: PropTypes.string,\n    to: PropTypes.shape({\n        x: PropTypes.number,\n        y: PropTypes.number,\n        size: sizePropType,\n        duration: PropTypes.number,\n        speed: PropTypes.number\n    })\n});\n\nexport default class Canvas extends Component {\n    static propTypes = {\n        options: PropTypes.shape({\n            maxParticles: PropTypes.number,\n            color: PropTypes.string,\n            colors: PropTypes.arrayOf(PropTypes.string),\n            shape: PropTypes.oneOfType([shapePropType, PropTypes.string]),\n            shapes: PropTypes.arrayOf(\n                PropTypes.oneOfType([shapePropType, PropTypes.string])\n            ),\n            minSize: PropTypes.number,\n            maxSize: PropTypes.number,\n            size: PropTypes.number,\n            minSpeed: PropTypes.number,\n            maxSpeed: PropTypes.number,\n            alpha: PropTypes.number,\n            frameRate: PropTypes.number,\n            duration: PropTypes.number,\n            precision: PropTypes.number,\n            debugOptions: PropTypes.shape({\n                enabled: PropTypes.bool.isRequired,\n                attachAllParticles: PropTypes.bool,\n                attachSingleParticles: PropTypes.bool\n            })\n        }),\n        handler: (props, propName, componentName) => {\n            if (props.handler === null || props.handler === undefined) {\n                return null;\n            }\n\n            if (!props.handler.hasOwnProperty('animate') && typeof props.handler.animate !== 'function') {\n                return new Error(`${propName} must have an 'animate' method in ${componentName}.`);\n            }\n            if (!props.handler.hasOwnProperty('draw') && typeof props.handler.draw !== 'function') {\n                return new Error(`${propName} must have an 'draw' method in ${componentName}.`);\n            }\n\n            return null;\n        },\n        className: PropTypes.string,\n        style: PropTypes.object\n    }\n\n    state = {\n        debug: null\n    }\n    handler = null;\n    debugInterval = null;\n\n    constructor(props) {\n        super(props);\n        this.handler = props.handler || Particles;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', () => {\n            if (this.canvas) {\n                this.canvasSizing(this.canvas);\n            }\n        });\n\n        this.canvasSizing(this.canvas);\n        if (this.particles !== null && typeof this.particles.debug === 'object') {\n            this.debugInterval = setInterval(() => {\n                window.test = this.particles.debug;\n                const debug = Object.assign({}, this.particles.debug);\n                this.setState({ debug: debug });\n            }, 1000);\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => {\n            this.canvasSizing(this.canvas);\n        });\n    }\n\n    canvasSizing = (canvas) => {\n        window.can = canvas;\n        const wWidth = canvas.parentElement.clientWidth;\n        const wHeight = canvas.parentElement.clientHeight;\n\n        const scale = window.devicePixelRatio;\n\n        canvas.style.width = wWidth + 'px';\n        canvas.style.height = wHeight + 'px';\n\n        canvas.width = scale * wWidth;\n        canvas.height = scale * wHeight;\n\n        if (this.particles !== null && typeof this.particles === 'object') {\n            this.particles.clear();\n            delete this.particles;\n        }\n\n        this.animate();\n    }\n\n    animate = () => {\n        let options = this.props.options;\n        let Handler = this.handler;\n        this.particles = new Handler(this.canvas, options);\n        this.particles.animate();\n    };\n\n    render() {\n        let debugElement = null;\n        if (this.state.debug !== null && typeof this.state.debug === 'object' && this.state.debug.frameRate !== null) {\n            this.canvas.parentElement.style.position = 'relative';\n            debugElement = (<div style={{\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                fontSize: '14px',\n                padding: '10px',\n                color: 'white',\n                backgroundColor: 'rgba(0,0,0,0.7)'\n            }}>{this.state.debug.frameRate} <i>fps</i></div>);\n        }\n\n        return (\n            <Aux>\n                <canvas className={this.props.className} style={this.props.style} ref={canvas => {\n                    this.canvas = canvas;\n                }} />\n                {debugElement}\n            </Aux>\n        );\n    }\n}\n"],"names":["importAll","r","keys","map","importAllImages","directory","extensions","require","context","hasProperty","property","object","Array","isArray","hasOwnProperty","e","warn","message","isObject","Particle","canvas","options","shape","color","image","size","precision","x","y","debugOptions","ctx","getContext","parseSize","Math","random","toFixed","imageOptions","undefined","Image","debug","enabled","Error","attachAllParticles","Particles","window","push","trueSize","radius","width","height","draw","posX","posY","rSize","src","drawImage","getSize","drawRectangle","drawCircle","beginPath","arc","PI","fillStyle","fill","fillRect","args","log","apply","axis","maxParticles","backgroundColor","colors","shapes","minSize","maxSize","minSpeed","maxSpeed","alpha","frameRate","duration","particles","style","parseFloat","frameInterval","showFrameRate","particleOptions","paused","createParticles","_particles","babelHelpers.typeof","entries","i","item","Object","assign","buildParticleOptions","particle","attachParticleAnimationConfig","positionCorrection","type","getRandomShape","genRandomSize","getRandomColor","getRandomCoordinate","animate","bounds","minX","minY","maxX","maxY","xSpace","ySpace","getDistance","to","from","speed","direction","getRandomFloat","getRandomInt","padding","splice","_newParticles","_particle","totalXSpace","totalYSpace","concat","interval","requestAnimationFrame","start","performance","now","frames","delta","clearRect","globalAlpha","incrementTo","incrementor","restore","clear","cancelAnimationFrame","directions","length","safeIncrement","projection","toUpperCase","fixed","min","max","floor","dimension","parseInt","obj","aux","props","children","sizePropType","PropTypes","oneOf","number","isRequired","shapePropType","string","Canvas","handler","addEventListener","canvasSizing","debugInterval","setInterval","test","setState","removeEventListener","debugElement","state","parentElement","position","React","className","Component","propTypes","arrayOf","oneOfType","bool","propName","componentName","can","wWidth","clientWidth","wHeight","clientHeight","scale","devicePixelRatio","Handler"],"mappings":"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"}
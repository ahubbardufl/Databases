{"ast":null,"code":"var _jsxFileName = \"/Users/tylermetz/Documents/GitHub/Databases/proj/client/src/Components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn-primary', 'btn-outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = _ref => {\n  let {\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n  } = _ref;\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n    onClick: onClick,\n    type: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/tylermetz/Documents/GitHub/Databases/proj/client/src/Components/Button.js"],"names":["React","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,CACX,aADW,EAEX,aAFW,CAAf;AAKA,MAAMC,KAAK,GAAG,CACV,aADU,EAEV,YAFU,CAAd;AAKA,OAAO,MAAMC,MAAM,GAAG,QAMhB;AAAA,MANiB;AACnBC,IAAAA,QADmB;AAEnBC,IAAAA,IAFmB;AAGnBC,IAAAA,OAHmB;AAInBC,IAAAA,WAJmB;AAKnBC,IAAAA;AALmB,GAMjB;AACF,QAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E;AAEA,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAG,OAAMO,gBAAiB,IAAGE,eAAgB,EAA9D;AAAiE,IAAA,OAAO,EAAEL,OAA1E;AACA,IAAA,IAAI,EAAED;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;KAAMF,M","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nconst STYLES = [\n    'btn-primary',\n    'btn-outline'\n]\n\nconst SIZES = [\n    'btn--medium',\n    'btn--large'\n]\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick}\n        type={type}>\n        </button>\n    )\n}"]},"metadata":{},"sourceType":"module"}